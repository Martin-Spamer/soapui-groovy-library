<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3c834af3-27ed-4b07-85cd-95bfa59b9161" activeEnvironment="Default" name="soapui-groovy-library" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="a4963402-fb23-40c3-9f34-8eac7b972c97" name="Library"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="398bd457-338f-4bdb-81d6-38e534aff4fa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random Data with Groovy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Random Data" id="9dc47e64-f221-4daf-b941-83efe647e345"><con:settings/><con:config><script>testCase = context.testCase

def randomEmail(String domain-part) {
	def local-part = userName("user-")
	def address = local-part+"@"+domain-part 
}

def randomUserName(String prefix) {
	Random rand = new Random()
 	def alphaNumPool = ['a'..'z',0..9].flatten()
 	def randomChars = (0..6).collect { alphaNumPool[rand.nextInt(alphaNumPool.size())] }
 	return prefix + randomChars.join()
 }

println randomUserName("user-")
println randomEmail("user-")

testCase.setPropertyValue("newUserName", randomUserName("user-"))

System.out &lt;&lt; "${#TestCase#newUserName}"
printls "${#TestCase#newUserName}"

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="761ab447-810f-4761-a20e-5ababafc0cc0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Using JAR" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="45f2ffdf-ac6c-453f-a7b3-3b8b603d5225" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Groovy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Message Exchange Raw Response" id="5d0ddb85-d528-416a-9779-b5936f48c9a6"><con:settings/><con:config><script>rawResponseAsString = new String( messageExchange.getRawResponseData())
log.info rawResponseAsString

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="b624fd18-24af-4f94-b974-68f7b799cc28"><con:settings/><con:config><script>import HTTPBuilder

new HTTPBuilder('https://httpbin.org').with {
    request(Method.GET) {
        uri.path = '/get'
        response.success = { resp ->
            assert resp.status == 200
            resp.headers.each {
                println "${it.name}: ${it.value}"
            }
        }
    }
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="84d6cba8-381b-41e9-a897-bd6b96c827bc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Using Apache SFTP" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Manual TestStep" id="a0bae0b8-8725-4b8b-bc51-47fbcbcc09db"><con:description>Install the Apache SFTP Jar</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="groovy" name="Show the Java Library path" id="0a17b9b1-5b91-4360-9e5f-69bf6dbe750b"><con:settings/><con:config><script>log.info System.properties["java.library.path"]
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="d7e6868a-df9f-478b-8198-f5ccf3185eb0"><con:settings/><con:config><script>import org.apache.commons.net.ftp.FTPClient

// test.rebex.net:22
new FTPClient().with {
    connect "test.rebex.net"
    enterLocalPassiveMode()
    login "demo", "password"
    changeWorkingDirectory "/pub/example"
    def incomingFile = new File("local-filename.txt")
    incomingFile.withOutputStream { ostream -> retrieveFile "readme.txt", ostream }
    disconnect()
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="410c1d9a-fe57-4f98-86df-9680a100d769" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 5" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="bd8e7ab6-15c4-48cd-b825-dd63449fdb47"><con:settings/><con:config><script>this.getClass().classLoader.rootLoader.addURL(new File("pojo.jar").toURL())</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ed9ee162-69cb-4324-9b0d-958cb1033880" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 6" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="364fbd3e-e747-4f01-936d-75674750334d"><con:settings/><con:config><script>// get properties from testCase, testSuite and project
log.info testRunner.testCase.name + "=" + testRunner.testCase.getPropertyValue( "PropertyName" )
log.info testRunner.testCase.testSuite.name + "=" + testRunner.testCase.testSuite.getPropertyValue( "PropertyName" )
log.info testRunner.testCase.testSuite.project.name + "=" + testRunner.testCase.testSuite.project.getPropertyValue( "PropertyName" )
log.info com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "PropertyName" )

context.expand( '${#Project#PropertyName}' )
context.expand( '${#TestSuite#PropertyName}' )
context.expand( '${#TestCase#PropertyName}' )
context.expand( '${#TestStep#PropertyName}' )
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0234f5e9-cd5e-482c-a6e6-f293b058f9e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reusable-Module-Example" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Reusable Groovy Script" id="874b524a-407d-4871-bdeb-521bbf580439"><con:settings/><con:config><script>class Example {
	def log
	def context
	def testRunner

 	// Class constructor with same case as Class name
 	def Example(logIn,contextIn,testRunnerIn) {
 		this.log = logIn
 		this.context = contextIn
 		this.testRunner = testRunnerIn
	}

 def execute(message) {
      // do some stuff to prove I've run with right context, etc.
      log.info testRunner
      log.info context
      log.info "return "+message
      return message
	}
}

context.setProperty( "example", new Example( log, context, testRunner) )
log.info "Library Context:"+context
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="484c94b0-83b4-4fdd-9d91-957cbc587828"><con:settings/><con:config><script>// get a reference to the library TestSuite
library = testRunner.testCase.testSuite.project.testSuites["Library"]
assert library != null

// find the module within the library 
module = library.testCases["Reusable-Module-Example"].testSteps["Reusable Groovy Script"]
assert module != null

// initialise the library; which places an instance of Example in the context
module.run(testRunner, context)

// get the instance of example from the context.
def example = context.example

// run the method, with parameter
log.info "example.execute() = " + example.execute("Tester")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="41015481-0aa4-49e4-a3ec-38f4d2403274" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Generate Correlation ID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="cf0b7ff8-21fd-4e5f-80ee-fc0c3dbb6852"><con:settings/><con:config><script>
log.info context.expand('${=java.util.UUID.randomUUID()}')

log.info context.expand('${=import java.text.SimpleDateFormat ; new SimpleDateFormat("YYYY-MM-DD 00:00:00").format(new Date())}')

log.info context.expand('${=def lastWeek = new Date();lastWeek++;lastWeek.format("YYYY-MM-dd")}')

log.info context.expand('${= def nextWeek = new Date() + 7; nextWeek.format("YYYY-MM-dd")}')
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b5f0d6c4-3b1e-4e0e-9c36-9716736d3718" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Using WsdlTestStepFactory" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="089d835d-44a7-489e-a917-98aec8ad3791"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.teststeps.registry
Class WsdlTestStepFactory

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c249ced2-ed7e-42b1-9829-7288c69c8813" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Controlling the Results Folder" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="e65df997-33ea-4307-9ddd-a9dc4311e8ea"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)

// define location relative to SOAPUI project.
String projectPath = groovyUtils.projectPath + "/destination/"

context.setProperty( "RootResultFolder", projectPath)
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3d22b159-7bd7-4831-ac0c-b1c25a07d5a3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 11" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="ca85def3-e061-41e4-8046-f1407157d429"><con:settings/><con:config><script>import groovy.lang.Binding
import groovy.util.GroovyScriptEngine

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// location of script file is relative to SOAPUI project file.
String scriptPath = groovyUtils.projectPath + "/groovy/"

// Create Groovy Script Engine to run the script.
GroovyScriptEngine gse = new GroovyScriptEngine(scriptPath) 

// Load the Groovy Script file 
externalScript = gse.loadScriptByName("external.groovy")  

// Create a runtime instance of script
instance = externalScript.newInstance()

// Sanity check 
assert instance!= null

// run the foo method in the external script
instance.foo()
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="124b6baa-cbe1-4182-a0a8-681dae6c7b02" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="System Properties" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="c16b98ab-ffdc-45e6-aa14-17369bb622e1"><con:settings/><con:config><script>systemProperty = context.expand('${=System.getProperty("soapui.home")}')
testRunner.testCase.setPropertyValue("systemProperty", systemProperty)
log.info("systemProperty="+testRunner.testCase.getPropertyValue("systemProperty"))

log.info context.expand('${=System.getProperty("JAVA_HOME")}')

log.info context.expand('${=System.getProperty("CLASS_PATH")}')
</script></con:config></con:testStep><con:properties><con:property><con:name>systemProperty</con:name><con:value>C:\Program Files (x86)\SmartBear\SoapUI-5.4.0/bin</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>